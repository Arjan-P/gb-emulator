import instructions

class Opcodes:
    def __init__(self,*args, **kwargs):
        self.Ins = instructions.Instructions()
        self.pIns = instructions.PrefixedInstructions()
        TYPE_VOID = 0
        TYPE_D8 = 1
        TYPE_D16 = 2
        TYPE_A8 = 3
        TYPE_A16 = 4
        TYPE_R8 = 5
        self.extended_opcodes = {
            # OPCODE  LABEL          LENGTH  ARG TYPE CYCLS  FLAGS
            '0x0' :  ("RLC B",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x1' : ("RLC C",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x2' : ("RLC D",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x3' : ("RLC E",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x4' : ("RLC H",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x5' : ("RLC L",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x6' : ("RLC (HL)",        1, TYPE_VOID,  16, ("Z", 0, 0, "C")),
            '0x7' : ("RLC A",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x8' : ("RRC B",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x9' : ("RRC C",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0xa' : ("RRC D",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0xb' : ("RRC E",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0xc' : ("RRC H",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0xd' : ("RRC L",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0xe' : ("RRC (HL)",        1, TYPE_VOID,  16, ("Z", 0, 0, "C")),
            '0xf' : ("RRC A",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x10': ("RL B",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x11': ("RL C",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x11': self.pIns.x11,
            '0x12': ("RL D",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x13': ("RL E",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x14': ("RL H",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x15': ("RL L",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x16': ("RL (HL)",         1, TYPE_VOID,  16, ("Z", 0, 0, "C")),
            '0x17': ("RL A",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x18': ("RR B",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x19': ("RR C",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x1a': ("RR D",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x1b': ("RR E",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x1c': ("RR H",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x1d': ("RR L",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x1e': ("RR (HL)",         1, TYPE_VOID,  16, ("Z", 0, 0, "C")),
            '0x1f': ("RR A",            1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x20': ("SLA B",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x21': ("SLA C",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x22': ("SLA D",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x23': ("SLA E",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x24': ("SLA H",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x25': ("SLA L",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x26': ("SLA (HL)",        1, TYPE_VOID,  16, ("Z", 0, 0, "C")),
            '0x27': ("SLA A",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x28': ("SRA B",           1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x29': ("SRA C",           1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x2a': ("SRA D",           1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x2b': ("SRA E",           1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x2c': ("SRA H",           1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x2d': ("SRA L",           1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x2e': ("SRA (HL)",        1, TYPE_VOID,  16, ("Z", 0, 0, 0)),
            '0x2f': ("SRA A",           1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x30': ("SWAP B",          1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x31': ("SWAP C",          1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x32': ("SWAP D",          1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x33': ("SWAP E",          1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x34': ("SWAP H",          1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x35': ("SWAP L",          1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x36': ("SWAP (HL)",       1, TYPE_VOID,  16, ("Z", 0, 0, 0)),
            '0x37': ("SWAP A",          1, TYPE_VOID,   8, ("Z", 0, 0, 0)),
            '0x38': ("SRL B",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x39': ("SRL C",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x3a': ("SRL D",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x3b': ("SRL E",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x3c': ("SRL H",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x3d': ("SRL L",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x3e': ("SRL (HL)",        1, TYPE_VOID,  16, ("Z", 0, 0, "C")),
            '0x3f': ("SRL A",           1, TYPE_VOID,   8, ("Z", 0, 0, "C")),
            '0x40': ("BIT 0, B",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x41': ("BIT 0, C",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x42': ("BIT 0, D",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x43': ("BIT 0, E",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x44': ("BIT 0, H",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x45': ("BIT 0, L",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x46': ("BIT 0, (HL)",     1, TYPE_VOID,  16, ("Z", 0, 1, None)),
            '0x47': ("BIT 0, A",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x48': ("BIT 1, B",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x49': ("BIT 1, C",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x4a': ("BIT 1, D",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x4b': ("BIT 1, E",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x4c': ("BIT 1, H",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x4d': ("BIT 1, L",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x4e': ("BIT 1, (HL)",     1, TYPE_VOID,  16, ("Z", 0, 1, None)),
            '0x4f': ("BIT 1, A",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x50': ("BIT 2, B",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x51': ("BIT 2, C",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x52': ("BIT 2, D",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x53': ("BIT 2, E",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x54': ("BIT 2, H",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x55': ("BIT 2, L",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x56': ("BIT 2, (HL)",     1, TYPE_VOID,  16, ("Z", 0, 1, None)),
            '0x57': ("BIT 2, A",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x58': ("BIT 3, B",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x59': ("BIT 3, C",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x5a': ("BIT 3, D",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x5b': ("BIT 3, E",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x5c': ("BIT 3, H",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x5d': ("BIT 3, L",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x5e': ("BIT 3, (HL)",     1, TYPE_VOID,  16, ("Z", 0, 1, None)),
            '0x5f': ("BIT 3, A",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x60': ("BIT 4, B",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x61': ("BIT 4, C",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x62': ("BIT 4, D",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x63': ("BIT 4, E",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x64': ("BIT 4, H",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x65': ("BIT 4, L",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x66': ("BIT 4, (HL)",     1, TYPE_VOID,  16, ("Z", 0, 1, None)),
            '0x67': ("BIT 4, A",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x68': ("BIT 5, B",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x69': ("BIT 5, C",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x6a': ("BIT 5, D",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x6b': ("BIT 5, E",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x6c': ("BIT 5, H",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x6d': ("BIT 5, L",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x6e': ("BIT 5, (HL)",     1, TYPE_VOID,  16, ("Z", 0, 1, None)),
            '0x6f': ("BIT 5, A",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x70': ("BIT 6, B",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x71': ("BIT 6, C",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x72': ("BIT 6, D",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x73': ("BIT 6, E",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x74': ("BIT 6, H",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x75': ("BIT 6, L",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x76': ("BIT 6, (HL)",     1, TYPE_VOID,  16, ("Z", 0, 1, None)),
            '0x77': ("BIT 6, A",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x78': ("BIT 7, B",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x79': ("BIT 7, C",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x7a': ("BIT 7, D",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x7b': ("BIT 7, E",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x7c': self.pIns.x7C,
            '0x7d': ("BIT 7, L",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x7e': ("BIT 7, (HL)",     1, TYPE_VOID,  16, ("Z", 0, 1, None)),
            '0x7f': ("BIT 7, A",        1, TYPE_VOID,   8, ("Z", 0, 1, None)),
            '0x80': ("RES 0, B",        1, TYPE_VOID,   8, None),
            '0x81': ("RES 0, C",        1, TYPE_VOID,   8, None),
            '0x82': ("RES 0, D",        1, TYPE_VOID,   8, None),
            '0x83': ("RES 0, E",        1, TYPE_VOID,   8, None),
            '0x84': ("RES 0, H",        1, TYPE_VOID,   8, None),
            '0x85': ("RES 0, L",        1, TYPE_VOID,   8, None),
            '0x86': ("RES 0, (HL)",     1, TYPE_VOID,  16, None),
            '0x87': ("RES 0, A",        1, TYPE_VOID,   8, None),
            '0x88': ("RES 1, B",        1, TYPE_VOID,   8, None),
            '0x89': ("RES 1, C",        1, TYPE_VOID,   8, None),
            '0x8a': ("RES 1, D",        1, TYPE_VOID,   8, None),
            '0x8b': ("RES 1, E",        1, TYPE_VOID,   8, None),
            '0x8c': ("RES 1, H",        1, TYPE_VOID,   8, None),
            '0x8d': ("RES 1, L",        1, TYPE_VOID,   8, None),
            '0x8e': ("RES 1, (HL)",     1, TYPE_VOID,  16, None),
            '0x8f': ("RES 1, A",        1, TYPE_VOID,   8, None),
            '0x90': ("RES 2, B",        1, TYPE_VOID,   8, None),
            '0x91': ("RES 2, C",        1, TYPE_VOID,   8, None),
            '0x92': ("RES 2, D",        1, TYPE_VOID,   8, None),
            '0x93': ("RES 2, E",        1, TYPE_VOID,   8, None),
            '0x94': ("RES 2, H",        1, TYPE_VOID,   8, None),
            '0x95': ("RES 2, L",        1, TYPE_VOID,   8, None),
            '0x96': ("RES 2, (HL)",     1, TYPE_VOID,  16, None),
            '0x97': ("RES 2, A",        1, TYPE_VOID,   8, None),
            '0x98': ("RES 3, B",        1, TYPE_VOID,   8, None),
            '0x99': ("RES 3, C",        1, TYPE_VOID,   8, None),
            '0x9a': ("RES 3, D",        1, TYPE_VOID,   8, None),
            '0x9b': ("RES 3, E",        1, TYPE_VOID,   8, None),
            '0x9c': ("RES 3, H",        1, TYPE_VOID,   8, None),
            '0x9d': ("RES 3, L",        1, TYPE_VOID,   8, None),
            '0x9e': ("RES 3, (HL)",     1, TYPE_VOID,  16, None),
            '0x9f': ("RES 3, A",        1, TYPE_VOID,   8, None),
            '0xa0': ("RES 4, B",        1, TYPE_VOID,   8, None),
            '0xa1': ("RES 4, C",        1, TYPE_VOID,   8, None),
            '0xa2': ("RES 4, D",        1, TYPE_VOID,   8, None),
            '0xa3': ("RES 4, E",        1, TYPE_VOID,   8, None),
            '0xa4': ("RES 4, H",        1, TYPE_VOID,   8, None),
            '0xa5': ("RES 4, L",        1, TYPE_VOID,   8, None),
            '0xa6': ("RES 4, (HL)",     1, TYPE_VOID,  16, None),
            '0xa7': ("RES 4, A",        1, TYPE_VOID,   8, None),
            '0xa8': ("RES 5, B",        1, TYPE_VOID,   8, None),
            '0xa9': ("RES 5, C",        1, TYPE_VOID,   8, None),
            '0xaa': ("RES 5, D",        1, TYPE_VOID,   8, None),
            '0xab': ("RES 5, E",        1, TYPE_VOID,   8, None),
            '0xac': ("RES 5, H",        1, TYPE_VOID,   8, None),
            '0xad': ("RES 5, L",        1, TYPE_VOID,   8, None),
            '0xae': ("RES 5, (HL)",     1, TYPE_VOID,  16, None),
            '0xaf': ("RES 5, A",        1, TYPE_VOID,   8, None),
            '0xb0': ("RES 6, B",        1, TYPE_VOID,   8, None),
            '0xb1': ("RES 6, C",        1, TYPE_VOID,   8, None),
            '0xb2': ("RES 6, D",        1, TYPE_VOID,   8, None),
            '0xb3': ("RES 6, E",        1, TYPE_VOID,   8, None),
            '0xb4': ("RES 6, H",        1, TYPE_VOID,   8, None),
            '0xb5': ("RES 6, L",        1, TYPE_VOID,   8, None),
            '0xb6': ("RES 6, (HL)",     1, TYPE_VOID,  16, None),
            '0xb7': ("RES 6, A",        1, TYPE_VOID,   8, None),
            '0xb8': ("RES 7, B",        1, TYPE_VOID,   8, None),
            '0xb9': ("RES 7, C",        1, TYPE_VOID,   8, None),
            '0xba': ("RES 7, D",        1, TYPE_VOID,   8, None),
            '0xbb': ("RES 7, E",        1, TYPE_VOID,   8, None),
            '0xbc': ("RES 7, H",        1, TYPE_VOID,   8, None),
            '0xbd': ("RES 7, L",        1, TYPE_VOID,   8, None),
            '0xbe': ("RES 7, (HL)",     1, TYPE_VOID,  16, None),
            '0xbf': ("RES 7, A",        1, TYPE_VOID,   8, None),
            '0xc0': ("SET 0, B",        1, TYPE_VOID,   8, None),
            '0xc1': ("SET 0, C",        1, TYPE_VOID,   8, None),
            '0xc2': ("SET 0, D",        1, TYPE_VOID,   8, None),
            '0xc3': ("SET 0, E",        1, TYPE_VOID,   8, None),
            '0xc4': ("SET 0, H",        1, TYPE_VOID,   8, None),
            '0xc5': ("SET 0, L",        1, TYPE_VOID,   8, None),
            '0xc6': ("SET 0, (HL)",     1, TYPE_VOID,  16, None),
            '0xc7': ("SET 0, A",        1, TYPE_VOID,   8, None),
            '0xc8': ("SET 1, B",        1, TYPE_VOID,   8, None),
            '0xc9': ("SET 1, C",        1, TYPE_VOID,   8, None),
            '0xca': ("SET 1, D",        1, TYPE_VOID,   8, None),
            '0xcb': ("SET 1, E",        1, TYPE_VOID,   8, None),
            '0xcc': ("SET 1, H",        1, TYPE_VOID,   8, None),
            '0xcd': ("SET 1, L",        1, TYPE_VOID,   8, None),
            '0xce': ("SET 1, (HL)",     1, TYPE_VOID,  16, None),
            '0xcf': ("SET 1, A",        1, TYPE_VOID,   8, None),
            '0xd0': ("SET 2, B",        1, TYPE_VOID,   8, None),
            '0xd1': ("SET 2, C",        1, TYPE_VOID,   8, None),
            '0xd2': ("SET 2, D",        1, TYPE_VOID,   8, None),
            '0xd3': ("SET 2, E",        1, TYPE_VOID,   8, None),
            '0xd4': ("SET 2, H",        1, TYPE_VOID,   8, None),
            '0xd5': ("SET 2, L",        1, TYPE_VOID,   8, None),
            '0xd6': ("SET 2, (HL)",     1, TYPE_VOID,  16, None),
            '0xd7': ("SET 2, A",        1, TYPE_VOID,   8, None),
            '0xd8': ("SET 3, B",        1, TYPE_VOID,   8, None),
            '0xd9': ("SET 3, C",        1, TYPE_VOID,   8, None),
            '0xda': ("SET 3, D",        1, TYPE_VOID,   8, None),
            '0xdb': ("SET 3, E",        1, TYPE_VOID,   8, None),
            '0xdc': ("SET 3, H",        1, TYPE_VOID,   8, None),
            '0xdd': ("SET 3, L",        1, TYPE_VOID,   8, None),
            '0xde': ("SET 3, (HL)",     1, TYPE_VOID,  16, None),
            '0xdf': ("SET 3, A",        1, TYPE_VOID,   8, None),
            '0xe0': ("SET 4, B",        1, TYPE_VOID,   8, None),
            '0xe1': ("SET 4, C",        1, TYPE_VOID,   8, None),
            '0xe2': ("SET 4, D",        1, TYPE_VOID,   8, None),
            '0xe3': ("SET 4, E",        1, TYPE_VOID,   8, None),
            '0xe4': ("SET 4, H",        1, TYPE_VOID,   8, None),
            '0xe5': ("SET 4, L",        1, TYPE_VOID,   8, None),
            '0xe6': ("SET 4, (HL)",     1, TYPE_VOID,  16, None),
            '0xe7': ("SET 4, A",        1, TYPE_VOID,   8, None),
            '0xe8': ("SET 5, B",        1, TYPE_VOID,   8, None),
            '0xe9': ("SET 5, C",        1, TYPE_VOID,   8, None),
            '0xea': ("SET 5, D",        1, TYPE_VOID,   8, None),
            '0xeb': ("SET 5, E",        1, TYPE_VOID,   8, None),
            '0xec': ("SET 5, H",        1, TYPE_VOID,   8, None),
            '0xed': ("SET 5, L",        1, TYPE_VOID,   8, None),
            '0xee': ("SET 5, (HL)",     1, TYPE_VOID,  16, None),
            '0xef': ("SET 5, A",        1, TYPE_VOID,   8, None),
            '0xf0': ("SET 6, B",        1, TYPE_VOID,   8, None),
            '0xf1': ("SET 6, C",        1, TYPE_VOID,   8, None),
            '0xf2': ("SET 6, D",        1, TYPE_VOID,   8, None),
            '0xf3': ("SET 6, E",        1, TYPE_VOID,   8, None),
            '0xf4': ("SET 6, H",        1, TYPE_VOID,   8, None),
            '0xf5': ("SET 6, L",        1, TYPE_VOID,   8, None),
            '0xf6': ("SET 6, (HL)",     1, TYPE_VOID,  16, None),
            '0xf7': ("SET 6, A",        1, TYPE_VOID,   8, None),
            '0xf8': ("SET 7, B",        1, TYPE_VOID,   8, None),
            '0xf9': ("SET 7, C",        1, TYPE_VOID,   8, None),
            '0xfa': ("SET 7, D",        1, TYPE_VOID,   8, None),
            '0xfb': ("SET 7, E",        1, TYPE_VOID,   8, None),
            '0xfc': ("SET 7, H",        1, TYPE_VOID,   8, None),
            '0xfd': ("SET 7, L",        1, TYPE_VOID,   8, None),
            '0xfe': ("SET 7, (HL)",     1, TYPE_VOID,  16, None),
            '0xff': ("SET 7, A",        1, TYPE_VOID,   8, None),
        }

        # Maps raw byte to (label, byte length, argument type, cycles or (cycles for
        # taken branch, cycles for not taken branch), flags).
        self.opcodes = {
            # RAW BYTE, LABEL, LENGTH, ARGUMENT TYPE, CYCLES, FLAGS
            '0x0':  ("NOP",             1, TYPE_VOID,  4, None),
            '0x1': ("LD BC, d16",      3, TYPE_D16,  12, None),
            '0x2': ("LD (BC), A",      1, TYPE_VOID,  8, None),
            '0x3': ("INC BC",          1, TYPE_VOID,  8, None),
            '0x4': self.Ins.x04,
            '0x5': self.Ins.x05,
            '0x6': self.Ins.x06,
            '0x7': ("RLCA",            1, TYPE_VOID,  4, (0, 0, 0, "C")),
            '0x8': ("LD (a16), SP",    3, TYPE_A16,  20, None),
            '0x9': ("ADD HL, BC",      1, TYPE_VOID,  8, (None, 0, "H", "C")),
            '0xa': ("LD A, (BC)",      1, TYPE_VOID,  8, None),
            '0xb': ("DEC BC",          1, TYPE_VOID,  8, None),
            '0xc': self.Ins.x0C,
            '0xd': self.Ins.x0D,
            '0xe': self.Ins.x0E,
            '0xf': ("RRCA",            1, TYPE_VOID,  4, (0, 0, 0, "C")),
            '0x10': ("STOP",            2, TYPE_VOID,  4, None),
            '0x11': self.Ins.x11,
            '0x12': ("LD (DE), A",      1, TYPE_VOID,  8, None),
            '0x13': self.Ins.x13,
            '0x14': ("INC D",           1, TYPE_VOID,  4, ("Z", 0, "H")),
            '0x15': self.Ins.x15,
            '0x16': ("LD D, d8",        2, TYPE_D8,    8, None),
            '0x17': self.Ins.x17,
            '0x18': self.Ins.x18,
            '0x19': ("ADD HL, DE",      1, TYPE_VOID,  8, (None, 0, "H", "C")),
            '0x1a': self.Ins.x1A,
            '0x1b': ("DEC DE",          1, TYPE_VOID,  8, None),
            '0x1c': ("INC E",           1, TYPE_VOID,  4, ("Z", 0, "H")),
            '0x1d': self.Ins.x1D,
            '0x1e': self.Ins.x1E,
            '0x1f': ("RRA",             1, TYPE_VOID,  4, (0, 0, 0, "C")),
            '0x20': self.Ins.x20,
            '0x21': self.Ins.x21,
            '0x22': self.Ins.x22,
            '0x23': self.Ins.x23,
            '0x24': self.Ins.x24,
            '0x25': ("DEC H",           1, TYPE_VOID,  4, ("Z", 1, "H")),
            '0x26': ("LD H, d8",        2, TYPE_D8,    8, None),
            '0x27': ("DAA",             1, TYPE_VOID,  4, ("Z", None, 0, "C")),
            '0x28': self.Ins.x28,
            '0x29': ("ADD HL, HL",      1, TYPE_VOID,  8, (None, 0, "H", "C")),
            '0x2a': ("LD A, (HL+)",     1, TYPE_VOID,  8, None),
            '0x2b': ("DEC HL",          1, TYPE_VOID,  8, None),
            '0x2c': ("INC L",           1, TYPE_VOID,  4, ("Z", 0, "H")),
            '0x2d': ("DEC L",           1, TYPE_VOID,  4, ("Z", 1, "H")),
            '0x2e': self.Ins.x2E,
            '0x2f': ("CPL",             1, TYPE_VOID,  4, (None, 1, 1, None)),
            '0x30': ("JR NC, r8",       2, TYPE_R8,  (12, 8), None),
            '0x31': self.Ins.x31,
            '0x32': self.Ins.x32,
            '0x33': ("INC SP",          1, TYPE_VOID,  8, None),
            '0x34': ("INC (HL)",        1, TYPE_VOID, 12, ("Z", 0, "H")),
            '0x35': ("DEC (HL)",        1, TYPE_VOID, 12, ("Z", 1, "H")),
            '0x36': ("LD (HL), d8",     2, TYPE_D8,   12, None),
            '0x37': ("SCF",             1, TYPE_VOID,  4, (None, 0, 0, 1)),
            '0x38': ("JR C, r8",        2, TYPE_R8,  (12, 8), None),
            '0x39': ("ADD HL, SP",      1, TYPE_VOID,  8, (None, 0, "H", "C")),
            '0x3a': ("LD A, (HL-)",     1, TYPE_VOID,  8, None),
            '0x3b': ("DEC SP",          1, TYPE_VOID,  8, None),
            '0x3c': self.Ins.x3C,
            '0x3d': self.Ins.x3D,
            '0x3e': self.Ins.x3E,
            '0x3f': ("CCF",             1, TYPE_VOID,  4, (None, 0, 0, "C")),
            '0x40': ("LD B, B",         1, TYPE_VOID,  4, None),
            '0x41': ("LD B, C",         1, TYPE_VOID,  4, None),
            '0x42': ("LD B, D",         1, TYPE_VOID,  4, None),
            '0x43': ("LD B, E",         1, TYPE_VOID,  4, None),
            '0x44': ("LD B, H",         1, TYPE_VOID,  4, None),
            '0x45': ("LD B, L",         1, TYPE_VOID,  4, None),
            '0x46': ("LD B, (HL)",      1, TYPE_VOID,  8, None),
            '0x47': ("LD B, A",         1, TYPE_VOID,  4, None),
            '0x48': ("LD C, B",         1, TYPE_VOID,  4, None),
            '0x49': ("LD C, C",         1, TYPE_VOID,  4, None),
            '0x4a': ("LD C, D",         1, TYPE_VOID,  4, None),
            '0x4b': ("LD C, E",         1, TYPE_VOID,  4, None),
            '0x4c': ("LD C, H",         1, TYPE_VOID,  4, None),
            '0x4d': ("LD C, L",         1, TYPE_VOID,  4, None),
            '0x4e': ("LD C, (HL)",      1, TYPE_VOID,  8, None),
            '0x4f': self.Ins.x4F,
            '0x50': ("LD D, B",         1, TYPE_VOID,  4, None),
            '0x51': ("LD D, C",         1, TYPE_VOID,  4, None),
            '0x52': ("LD D, D",         1, TYPE_VOID,  4, None),
            '0x53': ("LD D, E",         1, TYPE_VOID,  4, None),
            '0x54': ("LD D, H",         1, TYPE_VOID,  4, None),
            '0x55': ("LD D, L",         1, TYPE_VOID,  4, None),
            '0x56': ("LD D, (HL)",      1, TYPE_VOID,  8, None),
            '0x57': self.Ins.x57,
            '0x58': ("LD E, B",         1, TYPE_VOID,  4, None),
            '0x59': ("LD E, C",         1, TYPE_VOID,  4, None),
            '0x5a': ("LD E, D",         1, TYPE_VOID,  4, None),
            '0x5b': ("LD E, E",         1, TYPE_VOID,  4, None),
            '0x5c': ("LD E, H",         1, TYPE_VOID,  4, None),
            '0x5d': ("LD E, L",         1, TYPE_VOID,  4, None),
            '0x5e': ("LD E, (HL)",      1, TYPE_VOID,  8, None),
            '0x5f': ("LD E, A",         1, TYPE_VOID,  4, None),
            '0x60': ("LD H, B",         1, TYPE_VOID,  4, None),
            '0x61': ("LD H, C",         1, TYPE_VOID,  4, None),
            '0x62': ("LD H, D",         1, TYPE_VOID,  4, None),
            '0x63': ("LD H, E",         1, TYPE_VOID,  4, None),
            '0x64': ("LD H, H",         1, TYPE_VOID,  4, None),
            '0x65': ("LD H, L",         1, TYPE_VOID,  4, None),
            '0x66': ("LD H, (HL)",      1, TYPE_VOID,  8, None),
            '0x67': self.Ins.x67,
            '0x68': ("LD L, B",         1, TYPE_VOID,  4, None),
            '0x69': ("LD L, C",         1, TYPE_VOID,  4, None),
            '0x6a': ("LD L, D",         1, TYPE_VOID,  4, None),
            '0x6b': ("LD L, E",         1, TYPE_VOID,  4, None),
            '0x6c': ("LD L, H",         1, TYPE_VOID,  4, None),
            '0x6d': ("LD L, L",         1, TYPE_VOID,  4, None),
            '0x6e': ("LD L, (HL)",      1, TYPE_VOID,  8, None),
            '0x6f': ("LD L, A",         1, TYPE_VOID,  4, None),
            '0x70': ("LD (HL), B",      1, TYPE_VOID,  8, None),
            '0x71': ("LD (HL), C",      1, TYPE_VOID,  8, None),
            '0x72': ("LD (HL), D",      1, TYPE_VOID,  8, None),
            '0x73': ("LD (HL), E",      1, TYPE_VOID,  8, None),
            '0x74': ("LD (HL), H",      1, TYPE_VOID,  8, None),
            '0x75': ("LD (HL), L",      1, TYPE_VOID,  8, None),
            '0x76': ("HALT",            1, TYPE_VOID,  4, None),
            '0x77': self.Ins.x77,
            '0x78': ("LD A, B",         1, TYPE_VOID,  4, None),
            '0x79': ("LD A, C",         1, TYPE_VOID,  4, None),
            '0x7a': ("LD A, B",         1, TYPE_VOID,  4, None),
            '0x7b': self.Ins.x7B,
            '0x7c': self.Ins.x7C,
            '0x7d': ("LD A, L",         1, TYPE_VOID,  4, None),
            '0x7e': ("LD A, (HL)",      1, TYPE_VOID,  8, None),
            '0x7f': ("LD A, A",         1, TYPE_VOID,  4, None),
            '0x80': ("ADD A, B",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x81': ("ADD A, C",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x82': ("ADD A, D",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x83': ("ADD A, E",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x84': ("ADD A, H",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x85': ("ADD A, L",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x86': ("ADD A, (HL)",     1, TYPE_VOID,  8, ("Z", 0, "H", "C")),
            '0x87': ("ADC A, A",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x88': ("ADC A, B",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x89': ("ADC A, C",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x8a': ("ADC A, D",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x8b': ("ADC A, E",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x8c': ("ADC A, H",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x8d': ("ADC A, L",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x8e': ("ADC A, (HL)",     1, TYPE_VOID,  8, ("Z", 0, "H", "C")),
            '0x8f': ("ADC A, A",        1, TYPE_VOID,  4, ("Z", 0, "H", "C")),
            '0x90': self.Ins.x90,
            '0x91': ("SUB C",           1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x92': ("SUB D",           1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x93': ("SUB E",           1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x94': ("SUB H",           1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x95': ("SUB L",           1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x96': ("SUB (HL)",        1, TYPE_VOID,  8, ("Z", 1, "H", "C")),
            '0x97': ("SUB A",           1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x98': ("SBC A, B",        1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x99': ("SBC A, C",        1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x9a': ("SBC A, D",        1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x9b': ("SBC A, E",        1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x9c': ("SBC A, H",        1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x9d': ("SBC A, L",        1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0x9e': ("SBC A, (HL)",     1, TYPE_VOID,  8, ("Z", 1, "H", "C")),
            '0x9f': ("SBC A, A",        1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0xa0': ("AND B",           1, TYPE_VOID,  4, ("Z", 0, 1, 0)),
            '0xa1': ("AND C",           1, TYPE_VOID,  4, ("Z", 0, 1, 0)),
            '0xa2': ("AND D",           1, TYPE_VOID,  4, ("Z", 0, 1, 0)),
            '0xa3': ("AND E",           1, TYPE_VOID,  4, ("Z", 0, 1, 0)),
            '0xa4': ("AND H",           1, TYPE_VOID,  4, ("Z", 0, 1, 0)),
            '0xa5': ("AND L",           1, TYPE_VOID,  4, ("Z", 0, 1, 0)),
            '0xa6': ("AND (HL)",        1, TYPE_VOID,  8, ("Z", 0, 1, 0)),
            '0xa7': ("AND A",           1, TYPE_VOID,  4, ("Z", 0, 1, 0)),
            '0xa8': ("XOR B",           1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xa9': ("XOR C",           1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xaa': ("XOR D",           1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xab': ("XOR E",           1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xac': ("XOR H",           1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xad': ("XOR L",           1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xae': ("XOR (HL)",        1, TYPE_VOID,  8, ("Z", 0, 0, 0)),
            '0xaf': self.Ins.xAF,
            '0xb0': ("OR B",            1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xb1': ("OR C",            1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xb2': ("OR D",            1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xb3': ("OR E",            1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xb4': ("OR H",            1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xb5': ("OR L",            1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xb6': ("OR (HL)",         1, TYPE_VOID,  8, ("Z", 0, 0, 0)),
            '0xb7': ("OR A",            1, TYPE_VOID,  4, ("Z", 0, 0, 0)),
            '0xb8': ("CP B",            1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0xb9': ("CP C",            1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0xba': ("CP D",            1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0xbb': ("CP E",            1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0xbc': ("CP H",            1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0xbd': ("CP L",            1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0xbe': ("CP (HL)",         1, TYPE_VOID,  8, ("Z", 1, "H", "C")),
            '0xbf': ("CP A",            1, TYPE_VOID,  4, ("Z", 1, "H", "C")),
            '0xc0': ("RET NZ",          1, TYPE_VOID, (20, 8), None),
            '0xc1': self.Ins.xC1,
            '0xc2': ("JP NZ, a16",      3, TYPE_A16,  (16, 12), None),
            '0xc3': [],
            '0xc4': ("CALL NZ, a16",    3, TYPE_A16,  (24, 12), None),
            '0xc5': self.Ins.xC5,
            '0xc6': ("ADD A, d8",       2, TYPE_VOID,   8, ("Z", 0, "H", "C")),
            '0xc7': ("RST 00H",         1, TYPE_VOID,  16, None),
            '0xc8': ("RET Z",           1, TYPE_VOID, (20, 8), None),
            '0xc9': self.Ins.xC9,
            '0xca': ("JP Z, a16",       3, TYPE_A16,  (16, 12), None),
            '0xcb': ("PREFIX CB",       1, TYPE_VOID,   4, None),
            '0xcc': ("CALL Z, a16",     3, TYPE_A16,  (24, 12), None),
            '0xcd': self.Ins.xCD,
            '0xce': ("ADC A, d8",       2, TYPE_D8,     8, ("Z", 0, "H", "C")),
            '0xcf': ("RST 08H",         1, TYPE_VOID,  16, None),
            '0xd0': ("RET NC",          1, TYPE_VOID, (20, 8), None),
            '0xd1': ("POP DE",          1, TYPE_VOID,  12, None),
            '0xd2': ("JP NC, a16",      1, TYPE_A16,  (16, 12), None),
            '0xd3': ("-",               1, TYPE_VOID,   4, None),
            '0xd4': ("CALL NC, a16",    3, TYPE_A16,  (24, 12), None),
            '0xd5': ("PUSH DE",         1, TYPE_VOID,  16, None),
            '0xd6': ("SUB d8",          2, TYPE_D8,     8, ("Z", 1, "H", "C")),
            '0xd7': ("RST 10H",         1, TYPE_VOID,  16, None),
            '0xd8': ("RET C",           1, TYPE_VOID, (20, 8), None),
            '0xd9': ("RETI",            1, TYPE_VOID,  16, None),
            '0xda': ("JP C, a16",       3, TYPE_A16,  (20, 12), None),
            '0xdb': ("-",               1, TYPE_VOID,   4, None),
            '0xdc': ("CALL C, a16",     3, TYPE_A16,  (24, 12), None),
            '0xdd': ("-",               1, TYPE_VOID,   4, None),
            '0xde': ("SBC A, d8",       2, TYPE_D8,     8, ("Z", 1, "H", "C")),
            '0xdf': ("RST 18H",         1, TYPE_VOID,  16, None),
            '0xe0': self.Ins.xE0, # NOTE: Some say LDH
            '0xe1': ("POP HL",          1, TYPE_VOID,  12, None),
            '0xe2': self.Ins.xE2,
            '0xe3': ("-",               1, TYPE_VOID,   4, None),
            '0xe4': ("-",               1, TYPE_VOID,   4, None),
            '0xe5': ("PUSH HL",         1, TYPE_VOID,  16, None),
            '0xe6': ("AND d8",          2, TYPE_D8,     8, ("Z", 0, 1, 0)),
            '0xe7': ("RST 20H",         1, TYPE_VOID,  16, None),
            '0xe8': ("ADD SP, r8",      2, TYPE_R8,    16, (0, 0, "H", "C")),
            '0xe9': ("JP (HL)",         1, TYPE_VOID,   4, None),
            '0xea': self.Ins.xEA,
            '0xeb': ("-",               1, TYPE_VOID,   4, None),
            '0xec': ("-",               1, TYPE_VOID,   4, None),
            '0xed': ("-",               1, TYPE_VOID,   4, None),
            '0xee': ("XOR d8",          2, TYPE_R8,     8, ("Z", 0, 0, 0)),
            '0xef': ("RST 28H",         1, TYPE_VOID,  16, None),
            '0xf0': self.Ins.xF0,
            '0xf1': ("POP AF",          1, TYPE_VOID,  12, None),
            #0xf1: ("POP AF",          1, TYPE_VOID,  12, ("Z", "N", "H", "C")), # I believe this is wrong
            '0xf2': ("LD A, (C)",       2, TYPE_VOID,   8, None),
            '0xf3': ("DI",              1, TYPE_VOID,   4, None),
            '0xf4': ("-",               1, TYPE_VOID,   4, None),
            '0xf5': ("PUSH AF",         1, TYPE_VOID,  16, None),
            '0xf6': ("OR d8",           2, TYPE_D8,     8, None),
            '0xf7': ("RST 30H",         1, TYPE_VOID,  16, None),
            '0xf8': ("LD HL, SP+r8",    2, TYPE_R8,    12, (0, 0, "H", "C")),
            '0xf9': ("LD SP, HL",       1, TYPE_VOID,   8, None), # NOTE: Nintendo manual says 2 cycles?
            '0xfa': ("LD A, (a16)",     3, TYPE_A16,   16, None),
            '0xfb': ("EI",              1, TYPE_VOID,   4, None),
            '0xfc': ("-",               1, TYPE_VOID,   4, None),
            '0xfd': ("-",               1, TYPE_VOID,   4, None),
            '0xfe': self.Ins.xFE,
            '0xff': ("RST 38H",         1, TYPE_VOID,  16, None),
        }
        return super().__init__(*args, **kwargs)

